{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\multicampus\\\\Desktop\\\\project\\\\s02p13c103\\\\web\\\\src\\\\components\\\\BurgerModal.jsx\";\nimport React, { useState, useMemo } from \"react\";\nimport { makeStyles, CardMedia, Dialog, Button, DialogActions, DialogContent, DialogContentText, DialogTitle, Typography, Card, CardContent, CardActions, CardHeader, IconButton, Grid, Paper, Icon } from \"@material-ui/core\";\nimport { red } from \"@material-ui/core/colors\";\nimport { CancelOutlined, AddBox, IndeterminateCheckBox } from \"@material-ui/icons\";\nimport BurgerModalSingleRequests from \"./BurgerModalSingleRequests\";\nimport BurgerModalSetRequests from \"./BurgerModalSetRequests\";\nconst useStyles = makeStyles(theme => ({\n  cardMedia: {\n    paddingTop: \"56.25%\" // 16:9\n\n  },\n  dialogTitle1: {\n    backgroundColor: \"red\",\n    width: \"840px\",\n    height: 69,\n    color: \"white\",\n    padding: 0\n  },\n  dialogBody1: {\n    display: \"flex\",\n    width: \"840px\",\n    padding: 0\n  },\n  dialogTitle2: {\n    backgroundColor: \"red\",\n    width: \"900px\",\n    color: \"white\",\n    padding: 0\n  },\n  dialogBody2: {\n    display: \"flex\",\n    width: \"900px\",\n    padding: 0\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    paddingRight: 20\n  },\n  img: {\n    marginLeft: 40,\n    marginRight: 40,\n    width: 350\n  },\n  btnGridHeight: {\n    height: 180\n  },\n  btnSingle: {\n    color: \"white\",\n    background: \"red\",\n    height: 100,\n    width: 200\n  },\n  btnSet: {\n    color: \"white\",\n    background: \"yellow\",\n    height: 100,\n    width: 200\n  },\n  btnPosition: {\n    textAlign: \"center\",\n    paddingTop: 50\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    color: \"white\"\n  },\n  titleCss: {\n    position: \"absolute\",\n    left: theme.spacing(2),\n    margin: 0,\n    fontSize: 35,\n    padding: 5\n  }\n}));\n\nconst BurgerMoal = ({\n  burger\n}) => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [count, setCount] = useState(0);\n  const [price, setPrice] = useState(0);\n\n  const onClickIncCnt = () => {\n    setCount(() => count + 1);\n  };\n\n  const onClickDecCnt = () => {\n    setCount(() => {\n      if (count > 2) {\n        return count - 1;\n      } else {\n        return 1;\n      }\n    });\n  };\n\n  const getTotal = () => price * count;\n\n  const total = useMemo(() => getTotal(), [count, price]);\n  const [openSingle, setOpenSingle] = useState(false);\n\n  const handleClickOpenSingle = () => {\n    setOpen(false);\n    setOpenSingle(true);\n    setCount(1);\n    setPrice(burger.price_single);\n  };\n\n  const handleCloseSingle = () => {\n    setOpenSingle(false);\n  };\n\n  const [openSet, setOpenSet] = useState(false);\n\n  const handleClickOpenSet = () => {\n    setOpen(false);\n    setOpenSet(true);\n    setCount(1);\n    setPrice(burger.price_set);\n  };\n\n  const handleCloseSet = () => {\n    setOpenSet(false);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(CardMedia, {\n    className: classes.cardMedia,\n    image: burger.img,\n    title: burger.title,\n    onClick: handleClickOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }), React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\",\n    maxWidth: \"xl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"alert-dialog-title\",\n    className: classes.dialogTitle1,\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: classes.titleCss,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, burger.title), React.createElement(IconButton, {\n    className: classes.closeButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(CancelOutlined, {\n    onClick: handleClose,\n    style: {\n      fontSize: 45\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  })))), React.createElement(DialogContent, {\n    className: classes.dialogBody1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: burger.img,\n    alt: burger.title,\n    className: classes.img,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    component: \"h6\",\n    variant: \"h6\",\n    className: classes.details,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, \"\\uC870\\uB9AC\\uC2DC\\uAC04: \", burger.cooking_time, \"\\uBD84\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, burger.description))), React.createElement(Grid, {\n    container: true,\n    className: classes.btnGridHeight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    className: classes.btnPosition,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes.btnSingle,\n    variant: \"contained\",\n    onClick: handleClickOpenSingle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, \"\\uB2E8\\uD488: \", burger.price_single))), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    className: classes.btnPosition,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes.btnSet,\n    variant: \"contained\",\n    onClick: handleClickOpenSet,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, \"\\uC138\\uD2B8: \", burger.price_set))))), React.createElement(Dialog, {\n    open: openSingle,\n    onClose: handleCloseSingle,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\",\n    maxWidth: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"customized-dialog-title\",\n    onClose: handleClose,\n    className: classes.dialogTitle2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: classes.titleCss,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, \"\\uB2E8\\uD488\\uC120\\uD0DD\"), React.createElement(IconButton, {\n    className: classes.closeButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, React.createElement(CancelOutlined, {\n    onClick: handleCloseSingle,\n    style: {\n      fontSize: 45\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  })))), React.createElement(DialogContent, {\n    dividers: true,\n    className: classes.dialogBody2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: burger.img,\n    alt: burger.title,\n    className: classes.img,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    component: \"h6\",\n    variant: \"h6\",\n    className: classes.details,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, \"\\uC870\\uB9AC\\uC2DC\\uAC04: \", burger.cooking_time, \"\\uBD84\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, burger.description), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    elevation: 0,\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }, React.createElement(IndeterminateCheckBox, {\n    onClick: onClickDecCnt,\n    style: {\n      color: \"red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  }), count, React.createElement(AddBox, {\n    onClick: onClickIncCnt,\n    style: {\n      color: \"red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    elevation: 0,\n    style: {\n      textAlign: \"Right\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, total))), React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  })), React.createElement(BurgerModalSingleRequests, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  })), React.createElement(Dialog, {\n    open: openSet,\n    onClose: handleCloseSet,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\",\n    maxWidth: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"customized-dialog-title\",\n    onClose: handleClose,\n    className: classes.dialogTitle2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h4\",\n    style: {\n      paddingLeft: 25\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  }, \"\\uC138\\uD2B8\\uC120\\uD0DD\", React.createElement(IconButton, {\n    style: {\n      color: \"white\",\n      paddingLeft: 675\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285\n    },\n    __self: this\n  }, React.createElement(CancelOutlined, {\n    onClick: handleCloseSet,\n    style: {\n      fontSize: 45\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286\n    },\n    __self: this\n  })))), React.createElement(DialogContent, {\n    dividers: true,\n    className: classes.dialogBody2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: burger.img,\n    alt: burger.title,\n    className: classes.img,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    component: \"h6\",\n    variant: \"h6\",\n    className: classes.details,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296\n    },\n    __self: this\n  }, \"\\uC870\\uB9AC\\uC2DC\\uAC04: \", burger.cooking_time, \"\\uBD84\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297\n    },\n    __self: this\n  }, burger.description), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    elevation: 0,\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303\n    },\n    __self: this\n  }, React.createElement(IndeterminateCheckBox, {\n    onClick: onClickDecCnt,\n    style: {\n      color: \"red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304\n    },\n    __self: this\n  }), count, React.createElement(AddBox, {\n    onClick: onClickIncCnt,\n    style: {\n      color: \"red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    elevation: 0,\n    style: {\n      textAlign: \"Right\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314\n    },\n    __self: this\n  }, total))), React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317\n    },\n    __self: this\n  })), React.createElement(BurgerModalSetRequests, {\n    defaultPrice: burger.price_set,\n    priceChanger: setPrice,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319\n    },\n    __self: this\n  })));\n};\n\nexport default BurgerMoal;","map":{"version":3,"sources":["C:/Users/multicampus/Desktop/project/s02p13c103/web/src/components/BurgerModal.jsx"],"names":["React","useState","useMemo","makeStyles","CardMedia","Dialog","Button","DialogActions","DialogContent","DialogContentText","DialogTitle","Typography","Card","CardContent","CardActions","CardHeader","IconButton","Grid","Paper","Icon","red","CancelOutlined","AddBox","IndeterminateCheckBox","BurgerModalSingleRequests","BurgerModalSetRequests","useStyles","theme","cardMedia","paddingTop","dialogTitle1","backgroundColor","width","height","color","padding","dialogBody1","display","dialogTitle2","dialogBody2","details","flexDirection","paddingRight","img","marginLeft","marginRight","btnGridHeight","btnSingle","background","btnSet","btnPosition","textAlign","closeButton","position","right","spacing","titleCss","left","margin","fontSize","BurgerMoal","burger","classes","open","setOpen","handleClickOpen","handleClose","count","setCount","price","setPrice","onClickIncCnt","onClickDecCnt","getTotal","total","openSingle","setOpenSingle","handleClickOpenSingle","price_single","handleCloseSingle","openSet","setOpenSet","handleClickOpenSet","price_set","handleCloseSet","title","cooking_time","description","paddingLeft"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  CardMedia,\r\n  Dialog,\r\n  Button,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  CardActions,\r\n  CardHeader,\r\n  IconButton,\r\n  Grid,\r\n  Paper,\r\n  Icon\r\n} from \"@material-ui/core\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport {\r\n  CancelOutlined,\r\n  AddBox,\r\n  IndeterminateCheckBox\r\n} from \"@material-ui/icons\";\r\nimport BurgerModalSingleRequests from \"./BurgerModalSingleRequests\";\r\nimport BurgerModalSetRequests from \"./BurgerModalSetRequests\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardMedia: {\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  dialogTitle1: {\r\n    backgroundColor: \"red\",\r\n    width: \"840px\",\r\n    height: 69,\r\n    color: \"white\",\r\n    padding: 0\r\n  },\r\n  dialogBody1: {\r\n    display: \"flex\",\r\n    width: \"840px\",\r\n    padding: 0\r\n  },\r\n  dialogTitle2: {\r\n    backgroundColor: \"red\",\r\n    width: \"900px\",\r\n    color: \"white\",\r\n    padding: 0\r\n  },\r\n  dialogBody2: {\r\n    display: \"flex\",\r\n    width: \"900px\",\r\n    padding: 0\r\n  },\r\n  details: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    paddingRight: 20\r\n  },\r\n  img: {\r\n    marginLeft: 40,\r\n    marginRight: 40,\r\n    width: 350\r\n  },\r\n  btnGridHeight: {\r\n    height: 180\r\n  },\r\n  btnSingle: {\r\n    color: \"white\",\r\n    background: \"red\",\r\n    height: 100,\r\n    width: 200\r\n  },\r\n  btnSet: {\r\n    color: \"white\",\r\n    background: \"yellow\",\r\n    height: 100,\r\n    width: 200\r\n  },\r\n  btnPosition: {\r\n    textAlign: \"center\",\r\n    paddingTop: 50\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    color: \"white\"\r\n  },\r\n  titleCss: {\r\n    position: \"absolute\",\r\n    left: theme.spacing(2),\r\n    margin: 0,\r\n    fontSize: 35,\r\n    padding: 5\r\n  }\r\n}));\r\n\r\nconst BurgerMoal = ({ burger }) => {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [count, setCount] = useState(0);\r\n  const [price, setPrice] = useState(0);\r\n  const onClickIncCnt = () => {\r\n    setCount(() => count + 1);\r\n  };\r\n  const onClickDecCnt = () => {\r\n    setCount(() => {\r\n      if (count > 2) {\r\n        return count - 1;\r\n      } else {\r\n        return 1;\r\n      }\r\n    });\r\n  };\r\n\r\n  const getTotal = () => price * count;\r\n  const total = useMemo(() => getTotal(), [count, price]);\r\n\r\n  const [openSingle, setOpenSingle] = useState(false);\r\n  const handleClickOpenSingle = () => {\r\n    setOpen(false);\r\n    setOpenSingle(true);\r\n    setCount(1);\r\n    setPrice(burger.price_single);\r\n  };\r\n  const handleCloseSingle = () => {\r\n    setOpenSingle(false);\r\n  };\r\n\r\n  const [openSet, setOpenSet] = useState(false);\r\n  const handleClickOpenSet = () => {\r\n    setOpen(false);\r\n    setOpenSet(true);\r\n    setCount(1);\r\n    setPrice(burger.price_set);\r\n  };\r\n  const handleCloseSet = () => {\r\n    setOpenSet(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <CardMedia\r\n        className={classes.cardMedia}\r\n        image={burger.img}\r\n        title={burger.title}\r\n        onClick={handleClickOpen}\r\n      />\r\n\r\n      {/* 메뉴선택 모달 ----------------------------------------------------------------------------*/}\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        maxWidth=\"xl\"\r\n      >\r\n        <DialogTitle\r\n          id=\"alert-dialog-title\"\r\n          className={classes.dialogTitle1}\r\n          onClose={handleClose}\r\n        >\r\n          <Typography>\r\n            <p className={classes.titleCss}>{burger.title}</p>\r\n            <IconButton className={classes.closeButton}>\r\n              <CancelOutlined onClick={handleClose} style={{ fontSize: 45 }} />\r\n            </IconButton>\r\n          </Typography>\r\n        </DialogTitle>\r\n        <DialogContent className={classes.dialogBody1}>\r\n          <img src={burger.img} alt={burger.title} className={classes.img} />\r\n          <Typography component=\"h6\" variant=\"h6\" className={classes.details}>\r\n            <p>조리시간: {burger.cooking_time}분</p>\r\n            <p>{burger.description}</p>\r\n          </Typography>\r\n        </DialogContent>\r\n        <Grid container className={classes.btnGridHeight}>\r\n          <Grid item xs={6} className={classes.btnPosition}>\r\n            <Button\r\n              className={classes.btnSingle}\r\n              variant=\"contained\"\r\n              onClick={handleClickOpenSingle}\r\n            >\r\n              <Typography variant=\"h5\">단품: {burger.price_single}</Typography>\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={6} className={classes.btnPosition}>\r\n            <Button\r\n              className={classes.btnSet}\r\n              variant=\"contained\"\r\n              onClick={handleClickOpenSet}\r\n            >\r\n              <Typography variant=\"h5\">세트: {burger.price_set}</Typography>\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Dialog>\r\n\r\n      {/* 단품선택 모달 ----------------------------------------------------------------------------*/}\r\n      <Dialog\r\n        open={openSingle}\r\n        onClose={handleCloseSingle}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        maxWidth=\"false\"\r\n      >\r\n        <DialogTitle\r\n          id=\"customized-dialog-title\"\r\n          onClose={handleClose}\r\n          className={classes.dialogTitle2}\r\n        >\r\n          <Typography>\r\n            <p className={classes.titleCss}>단품선택</p>\r\n            <IconButton className={classes.closeButton}>\r\n              <CancelOutlined\r\n                onClick={handleCloseSingle}\r\n                style={{ fontSize: 45 }}\r\n              />\r\n            </IconButton>\r\n          </Typography>\r\n          {/* <Typography voariant=\"h4\" style={{ paddingLeft: 25 }}>\r\n            단품선택\r\n            <IconButton style={{ color: \"white\", paddingLeft: 675 }}>\r\n              <CancelOutlined\r\n                onClick={handleCloseSingle}\r\n                style={{ fontSize: 45 }}\r\n              />\r\n            </IconButton>\r\n          </Typography> */}\r\n        </DialogTitle>\r\n        <DialogContent dividers className={classes.dialogBody2}>\r\n          <img src={burger.img} alt={burger.title} className={classes.img} />\r\n          <Typography component=\"h6\" variant=\"h6\" className={classes.details}>\r\n            <p>조리시간: {burger.cooking_time}분</p>\r\n            <p>{burger.description}</p>\r\n            <p></p>\r\n          </Typography>\r\n        </DialogContent>\r\n        <Grid container>\r\n          <Grid item xs={6}>\r\n            <Paper elevation={0} style={{ textAlign: \"center\" }}>\r\n              <IndeterminateCheckBox\r\n                onClick={onClickDecCnt}\r\n                style={{ color: \"red\" }}\r\n              />\r\n              {count}\r\n              <AddBox onClick={onClickIncCnt} style={{ color: \"red\" }} />\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={5}>\r\n            <Paper elevation={0} style={{ textAlign: \"Right\" }}>\r\n              <Typography variant=\"h5\">{total}</Typography>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={1} />\r\n        </Grid>\r\n        <BurgerModalSingleRequests />\r\n      </Dialog>\r\n\r\n      {/* 세트선택 모달 ----------------------------------------------------------------------------*/}\r\n      <Dialog\r\n        open={openSet}\r\n        onClose={handleCloseSet}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        maxWidth=\"false\"\r\n      >\r\n        <DialogTitle\r\n          id=\"customized-dialog-title\"\r\n          onClose={handleClose}\r\n          className={classes.dialogTitle2}\r\n        >\r\n          <Typography variant=\"h4\" style={{ paddingLeft: 25 }}>\r\n            세트선택\r\n            <IconButton style={{ color: \"white\", paddingLeft: 675 }}>\r\n              <CancelOutlined\r\n                onClick={handleCloseSet}\r\n                style={{ fontSize: 45 }}\r\n              />\r\n            </IconButton>\r\n          </Typography>\r\n        </DialogTitle>\r\n        <DialogContent dividers className={classes.dialogBody2}>\r\n          <img src={burger.img} alt={burger.title} className={classes.img} />\r\n          <Typography component=\"h6\" variant=\"h6\" className={classes.details}>\r\n            <p>조리시간: {burger.cooking_time}분</p>\r\n            <p>{burger.description}</p>\r\n            <p></p>\r\n          </Typography>\r\n        </DialogContent>\r\n        <Grid container>\r\n          <Grid item xs={6}>\r\n            <Paper elevation={0} style={{ textAlign: \"center\" }}>\r\n              <IndeterminateCheckBox\r\n                onClick={onClickDecCnt}\r\n                style={{ color: \"red\" }}\r\n              />\r\n              {count}\r\n              <AddBox onClick={onClickIncCnt} style={{ color: \"red\" }} />\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={5}>\r\n            <Paper elevation={0} style={{ textAlign: \"Right\" }}>\r\n              <Typography variant=\"h5\">{total}</Typography>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={1} />\r\n        </Grid>\r\n        <BurgerModalSetRequests\r\n          defaultPrice={burger.price_set}\r\n          priceChanger={setPrice}\r\n        />\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BurgerMoal;\r\n"]},"metadata":{},"sourceType":"module"}