{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\multicampus\\\\git\\\\s02p13c103\\\\web\\\\src\\\\pages\\\\auth\\\\auth-go.jsx\";\nimport React from \"react\";\nimport Layout from \"../../layout/Layout\";\nimport Webcam from \"react-webcam\";\n\nvar AWS = require(\"aws-sdk\");\n\nconst videoConstraints = {\n  width: 1280,\n  height: 720,\n  facingMode: \"user\"\n};\nconst cfg = {\n  region: \"us-west-2\",\n  upload_bucket_name: \"rekognition-stack-demo-s3upload-1gezpp4hs4cul\",\n  identity_pool_id: \"us-west-2:811ae595-f007-467f-919f-0056e4a81b3b\",\n  face_collection: \"rekognition-demo-go\",\n  ddb_table: \"rekognition-demo-go\"\n};\nvar bucketName = cfg.upload_bucket_name;\nvar face_collection = cfg.face_collection;\nvar table = cfg.ddb_table; // Define AWS Resources\n\nvar region = cfg.region;\nvar creds = new AWS.CognitoIdentityCredentials({\n  IdentityPoolId: cfg.identity_pool_id\n});\nAWS.config.update({\n  region: region,\n  credentials: creds\n});\nvar rekognition = new AWS.Rekognition({\n  apiVersion: \"2016-06-27\"\n});\nvar docClient = new AWS.DynamoDB.DocumentClient();\nvar identityId = AWS.config.credentials.identityId;\nvar s3 = new AWS.S3({\n  apiVersion: \"2006-03-01\",\n  params: {\n    Bucket: bucketName\n  }\n});\n\nconst AuthPage = props => {\n  const index = 0;\n  const webcamRef = React.useRef(null);\n  const capture = React.useCallback(() => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    console.log(imageSrc);\n  }, [webcamRef]);\n\n  const trackEmotions = () => {\n    var params = {\n      Attributes: [\"ALL\"],\n      Image: {\n        Bytes: blobData\n      }\n    };\n    rekognition.detectFaces(params, function (err, data) {});\n    return React.createElement(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Webcam, {\n      audio: false,\n      height: 720,\n      ref: webcamRef,\n      screenshotFormat: \"image/jpeg\",\n      width: 1280,\n      videoConstraints: videoConstraints,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: capture,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Capture photo\"));\n  };\n};\n\nexport default AuthPage;","map":{"version":3,"sources":["C:/Users/multicampus/git/s02p13c103/web/src/pages/auth/auth-go.jsx"],"names":["React","Layout","Webcam","AWS","require","videoConstraints","width","height","facingMode","cfg","region","upload_bucket_name","identity_pool_id","face_collection","ddb_table","bucketName","table","creds","CognitoIdentityCredentials","IdentityPoolId","config","update","credentials","rekognition","Rekognition","apiVersion","docClient","DynamoDB","DocumentClient","identityId","s3","S3","params","Bucket","AuthPage","props","index","webcamRef","useRef","capture","useCallback","imageSrc","current","getScreenshot","console","log","trackEmotions","Attributes","Image","Bytes","blobData","detectFaces","err","data"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Layout from \"../../layout/Layout\";\r\nimport Webcam from \"react-webcam\";\r\nvar AWS = require(\"aws-sdk\");\r\nconst videoConstraints = {\r\n  width: 1280,\r\n  height: 720,\r\n  facingMode: \"user\"\r\n};\r\nconst cfg = {\r\n  region: \"us-west-2\",\r\n  upload_bucket_name: \"rekognition-stack-demo-s3upload-1gezpp4hs4cul\",\r\n  identity_pool_id: \"us-west-2:811ae595-f007-467f-919f-0056e4a81b3b\",\r\n  face_collection: \"rekognition-demo-go\",\r\n  ddb_table: \"rekognition-demo-go\"\r\n};\r\nvar bucketName = cfg.upload_bucket_name;\r\nvar face_collection = cfg.face_collection;\r\nvar table = cfg.ddb_table;\r\n// Define AWS Resources\r\nvar region = cfg.region;\r\nvar creds = new AWS.CognitoIdentityCredentials({\r\n  IdentityPoolId: cfg.identity_pool_id\r\n});\r\n\r\nAWS.config.update({\r\n  region: region,\r\n  credentials: creds\r\n});\r\n\r\nvar rekognition = new AWS.Rekognition({ apiVersion: \"2016-06-27\" });\r\nvar docClient = new AWS.DynamoDB.DocumentClient();\r\n\r\nvar identityId = AWS.config.credentials.identityId;\r\n\r\nvar s3 = new AWS.S3({\r\n  apiVersion: \"2006-03-01\",\r\n  params: { Bucket: bucketName }\r\n});\r\nconst AuthPage = props => {\r\n  const index = 0;\r\n\r\n  const webcamRef = React.useRef(null);\r\n  const capture = React.useCallback(() => {\r\n    const imageSrc = webcamRef.current.getScreenshot();\r\n    console.log(imageSrc);\r\n  }, [webcamRef]);\r\n  const trackEmotions = () => {\r\n    var params = {\r\n      Attributes: [\"ALL\"],\r\n      Image: {\r\n        Bytes: blobData\r\n      }\r\n    };\r\n    rekognition.detectFaces(params, function(err, data) {});\r\n\r\n    return (\r\n      <Layout>\r\n        <Webcam\r\n          audio={false}\r\n          height={720}\r\n          ref={webcamRef}\r\n          screenshotFormat=\"image/jpeg\"\r\n          width={1280}\r\n          videoConstraints={videoConstraints}\r\n        />\r\n        <button onClick={capture}>Capture photo</button>\r\n      </Layout>\r\n    );\r\n  };\r\n};\r\n\r\nexport default AuthPage;\r\n"]},"metadata":{},"sourceType":"module"}