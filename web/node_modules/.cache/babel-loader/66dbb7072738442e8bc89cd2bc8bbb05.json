{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\multicampus\\\\Desktop\\\\project\\\\s02p13c103\\\\web\\\\src\\\\components\\\\PaymentModal.jsx\";\nimport React, { useState } from \"react\";\nimport { makeStyles, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TableContainer, TableHead, TableBody, TableRow, TableCell } from \"@material-ui/core\";\nconst useStyles = makeStyles(theme => ({\n  btnPayment: {\n    color: \"white\",\n    background: \"red\",\n    height: 100,\n    width: \"100%\"\n  }\n}));\n\nconst PaymentModal = ({\n  orderList\n}) => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes.btnPayment,\n    onClick: handleClickOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"\\uACB0\\uC81C\\uD558\\uAE30\"), React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"alert-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"\\uC8FC\\uBB38\\uD558\\uC2E0 \\uBAA9\\uB85D\\uC744 \\uD55C\\uBC88 \\uB354 \\uD655\\uC778\\uD574 \\uC8FC\\uC138\\uC694.\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    id: \"alert-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(TableContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    style: {\n      background: \"red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    style: {\n      minWidth: 390\n    },\n    className: classes.tableHeadCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"\\uC81C\\uD488\\uBA85\"), React.createElement(TableCell, {\n    style: {\n      minWidth: 200\n    },\n    className: classes.tableHeadCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"\\uC218\\uB7C9\"), React.createElement(TableCell, {\n    style: {\n      minWidth: 200\n    },\n    className: classes.tableHeadCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"\\uAE08\\uC561\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, orderList.map(order => {\n    return React.createElement(TableRow, {\n      key: order.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, order.contents.map((content, idx) => {\n      if (idx === order.contents.length - 1) {\n        return content;\n      } else {\n        return content + \", \";\n      }\n    })), React.createElement(TableCell, {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, order.cnt), React.createElement(TableCell, {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, order.price));\n  })))))));\n};\n\nexport default PaymentModal;","map":{"version":3,"sources":["C:/Users/multicampus/Desktop/project/s02p13c103/web/src/components/PaymentModal.jsx"],"names":["React","useState","makeStyles","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","TableContainer","TableHead","TableBody","TableRow","TableCell","useStyles","theme","btnPayment","color","background","height","width","PaymentModal","orderList","classes","open","setOpen","handleClickOpen","handleClose","minWidth","tableHeadCell","map","order","id","contents","content","idx","length","textAlign","cnt","price"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  TableContainer,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  btnPayment: {\r\n    color: \"white\",\r\n    background: \"red\",\r\n    height: 100,\r\n    width: \"100%\"\r\n  }\r\n}));\r\n\r\nconst PaymentModal = ({ orderList }) => {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button className={classes.btnPayment} onClick={handleClickOpen}>\r\n        결제하기\r\n      </Button>\r\n\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          주문하신 목록을 한번 더 확인해 주세요.\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            <TableContainer>\r\n              <TableHead>\r\n                <TableRow style={{ background: \"red\" }}>\r\n                  <TableCell\r\n                    style={{ minWidth: 390 }}\r\n                    className={classes.tableHeadCell}\r\n                  >\r\n                    제품명\r\n                  </TableCell>\r\n                  <TableCell\r\n                    style={{ minWidth: 200 }}\r\n                    className={classes.tableHeadCell}\r\n                  >\r\n                    수량\r\n                  </TableCell>\r\n                  <TableCell\r\n                    style={{ minWidth: 200 }}\r\n                    className={classes.tableHeadCell}\r\n                  >\r\n                    금액\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {orderList.map(order => {\r\n                  return (\r\n                    <TableRow key={order.id}>\r\n                      {/* 제품목록 보여주는 cell */}\r\n                      <TableCell>\r\n                        {order.contents.map((content, idx) => {\r\n                          if (idx === order.contents.length - 1) {\r\n                            return content;\r\n                          } else {\r\n                            return content + \", \";\r\n                          }\r\n                        })}\r\n                      </TableCell>\r\n                      {/* 제품수량 보여주는 cell */}\r\n                      <TableCell style={{ textAlign: \"center\" }}>\r\n                        {/* <IndeterminateCheckBox\r\n                      style={{ color: \"red\" }}\r\n                      onClick={() => decCnt(order.id)}\r\n                    /> */}\r\n                        {order.cnt}\r\n                        {/* <AddBox\r\n                      style={{ color: \"red\" }}\r\n                      onClick={() => incCnt(order.id)}\r\n                    /> */}\r\n                      </TableCell>\r\n                      {/* 제품가격 보여주는 cell */}\r\n                      <TableCell style={{ textAlign: \"center\" }}>\r\n                        {order.price}\r\n                        {/* <Close\r\n                      style={{ color: \"red\" }}\r\n                      // onClick={() => deleteList(order.id)}\r\n                    /> */}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </TableContainer>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        {/* <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions> */}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentModal;\r\n"]},"metadata":{},"sourceType":"module"}