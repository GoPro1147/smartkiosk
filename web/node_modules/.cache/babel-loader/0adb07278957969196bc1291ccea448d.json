{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\multicampus\\\\Desktop\\\\project\\\\s02p13c103\\\\web\\\\src\\\\components\\\\OrderList.jsx\";\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { makeStyles, Grid, Paper, Typography, Button, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from \"@material-ui/core\";\nimport { AddBox, IndeterminateCheckBox } from \"@material-ui/icons\";\nimport { grey } from \"@material-ui/core/colors\";\nconst useStyles = makeStyles(theme => ({\n  text: {\n    color: \"white\",\n    padding: \"0 auto\",\n    margin: \"0\"\n  },\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: \"center\"\n  },\n  listPaper: {\n    height: 600,\n    paddingTop: 20,\n    paddingLeft: 20\n  },\n  tableHeadCell: {\n    textAlign: \"center\",\n    fontSize: 30\n  }\n}));\n\nconst OrderList = ({\n  orderList,\n  setOrderList\n}) => {\n  const classes = useStyles();\n\n  const incCnt = ordId => {\n    let temp = [];\n    orderList.map(order => {\n      if (order.id === ordId) {\n        temp.push({\n          id: order.id,\n          contents: order.contents,\n          cnt: order.cnt + 1,\n          price: order.price / order.cnt * (order.cnt + 1)\n        });\n      } else {\n        temp.push({\n          id: order.id,\n          contents: order.contents,\n          cnt: order.cnt,\n          price: order.price\n        });\n      }\n    });\n    setOrderList(temp);\n  };\n\n  useEffect(() => {\n    console.log(orderList);\n  }, [orderList]);\n  return React.createElement(Grid, {\n    item: true,\n    xs: 9,\n    className: classes.listPaper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    style: {\n      height: 560\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(TableContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    style: {\n      background: grey[400]\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    style: {\n      minWidth: 390\n    },\n    className: classes.tableHeadCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"\\uC81C\\uD488\\uBA85\"), React.createElement(TableCell, {\n    style: {\n      minWidth: 200\n    },\n    className: classes.tableHeadCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"\\uC218\\uB7C9\"), React.createElement(TableCell, {\n    style: {\n      minWidth: 200\n    },\n    className: classes.tableHeadCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"\\uAE08\\uC561\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, orderList.map(ord => {\n    return React.createElement(TableRow, {\n      key: ord.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, ord.contents.map((content, idx) => {\n      if (idx === ord.contents.length - 1) {\n        return content;\n      } else {\n        return content + \", \";\n      }\n    })), React.createElement(TableCell, {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(IndeterminateCheckBox, {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), ord.cnt, React.createElement(AddBox, {\n      style: {\n        color: \"red\"\n      },\n      onClick: () => incCnt(ord.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    })), React.createElement(TableCell, {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, ord.price));\n  })))));\n};\n\nexport default OrderList;","map":{"version":3,"sources":["C:/Users/multicampus/Desktop/project/s02p13c103/web/src/components/OrderList.jsx"],"names":["React","useState","useEffect","useMemo","makeStyles","Grid","Paper","Typography","Button","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","AddBox","IndeterminateCheckBox","grey","useStyles","theme","text","color","padding","margin","paper","spacing","textAlign","listPaper","height","paddingTop","paddingLeft","tableHeadCell","fontSize","OrderList","orderList","setOrderList","classes","incCnt","ordId","temp","map","order","id","push","contents","cnt","price","console","log","background","minWidth","ord","content","idx","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow\r\n} from \"@material-ui/core\";\r\nimport { AddBox, IndeterminateCheckBox } from \"@material-ui/icons\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  text: {\r\n    color: \"white\",\r\n    padding: \"0 auto\",\r\n    margin: \"0\"\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: \"center\"\r\n  },\r\n  listPaper: {\r\n    height: 600,\r\n    paddingTop: 20,\r\n    paddingLeft: 20\r\n  },\r\n  tableHeadCell: {\r\n    textAlign: \"center\",\r\n    fontSize: 30\r\n  }\r\n}));\r\n\r\nconst OrderList = ({ orderList, setOrderList }) => {\r\n  const classes = useStyles();\r\n\r\n  const incCnt = ordId => {\r\n    let temp = [];\r\n    orderList.map(order => {\r\n      if (order.id === ordId) {\r\n        temp.push({\r\n          id: order.id,\r\n          contents: order.contents,\r\n          cnt: order.cnt + 1,\r\n          price: (order.price / order.cnt) * (order.cnt + 1)\r\n        });\r\n      } else {\r\n        temp.push({\r\n          id: order.id,\r\n          contents: order.contents,\r\n          cnt: order.cnt,\r\n          price: order.price\r\n        });\r\n      }\r\n    });\r\n    setOrderList(temp);\r\n  };\r\n  useEffect(() => {\r\n    console.log(orderList);\r\n  }, [orderList]);\r\n\r\n  return (\r\n    <Grid item xs={9} className={classes.listPaper}>\r\n      <Paper style={{ height: 560 }}>\r\n        <TableContainer>\r\n          <TableHead>\r\n            <TableRow style={{ background: grey[400] }}>\r\n              <TableCell\r\n                style={{ minWidth: 390 }}\r\n                className={classes.tableHeadCell}\r\n              >\r\n                제품명\r\n              </TableCell>\r\n              <TableCell\r\n                style={{ minWidth: 200 }}\r\n                className={classes.tableHeadCell}\r\n              >\r\n                수량\r\n              </TableCell>\r\n              <TableCell\r\n                style={{ minWidth: 200 }}\r\n                className={classes.tableHeadCell}\r\n              >\r\n                금액\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {orderList.map(ord => {\r\n              return (\r\n                <TableRow key={ord.id}>\r\n                  {/* 제품목록 보여주는 cell */}\r\n                  <TableCell>\r\n                    {ord.contents.map((content, idx) => {\r\n                      if (idx === ord.contents.length - 1) {\r\n                        return content;\r\n                      } else {\r\n                        return content + \", \";\r\n                      }\r\n                    })}\r\n                  </TableCell>\r\n                  {/* 제품수량 보여주는 cell */}\r\n                  <TableCell style={{ textAlign: \"center\" }}>\r\n                    <IndeterminateCheckBox style={{ color: \"red\" }} />\r\n                    {ord.cnt}\r\n                    <AddBox\r\n                      style={{ color: \"red\" }}\r\n                      onClick={() => incCnt(ord.id)}\r\n                    />\r\n                  </TableCell>\r\n                  {/* 제품가격 보여주는 cell */}\r\n                  <TableCell style={{ textAlign: \"center\" }}>\r\n                    {ord.price}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </TableContainer>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default OrderList;\r\n"]},"metadata":{},"sourceType":"module"}