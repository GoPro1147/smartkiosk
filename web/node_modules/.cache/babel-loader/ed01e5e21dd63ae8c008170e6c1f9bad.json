{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\multicampus\\\\Desktop\\\\project\\\\s02p13c103\\\\web\\\\src\\\\components\\\\original_kiosk\\\\PaymentModal.jsx\";\nimport React, { useState } from \"react\";\nimport { makeStyles, Button, Typography, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TableContainer, TableHead, TableBody, TableRow, TableCell } from \"@material-ui/core\";\nimport { Fastfood, Storefront } from \"@material-ui/icons\";\nimport { red, grey } from \"@material-ui/core/colors\";\nconst useStyles = makeStyles(theme => ({\n  btnPayment: {\n    color: \"white\",\n    background: \"red\",\n    height: 100,\n    width: \"100%\"\n  },\n  dialogTitle: {\n    backgroundColor: \"red\",\n    width: \"840px\",\n    height: 69,\n    color: \"white\",\n    padding: 0\n  },\n  dialogBody: {\n    width: \"840px\"\n  },\n  titleCss: {\n    position: \"absolute\",\n    left: theme.spacing(2),\n    margin: 0,\n    fontSize: 35,\n    padding: 5\n  },\n  tableHeadCell: {\n    textAlign: \"center\",\n    fontSize: 25\n  }\n}));\n\nconst PaymentModal = ({\n  orderList\n}) => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [openOrderFirst, setOpenOrderFirst] = useState(false);\n\n  const handleClickOpenOrderFirst = () => {\n    setOpenOrderFirst(true);\n  };\n\n  const handleCloseOrderFirst = () => {\n    setOpenOrderFirst(false);\n  };\n\n  const handleClick = () => {\n    if (orderList.length === 0) {\n      handleClickOpenOrderFirst();\n    } else {\n      handleClickOpen();\n    }\n\n    console.log(orderList);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes.btnPayment,\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"\\uACB0\\uC81C\\uD558\\uAE30\"), React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\",\n    maxWidth: \"xl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"alert-dialog-title\",\n    className: classes.dialogTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: classes.titleCss,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"\\uACB0\\uC81C\\uD558\\uAE30\")), React.createElement(DialogContent // className={classes.dialogBody}\n  , {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    id: \"alert-dialog-description\",\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    style: {\n      color: \"black\",\n      margin: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"\\uC8FC\\uBB38\\uB0B4\\uC5ED\\uC744 \\uD655\\uC778 \\uD6C4 \\uC2DD\\uC0AC \\uC7A5\\uC18C\\uB97C \\uC120\\uD0DD\\uD558\\uC138\\uC694.\")), React.createElement(TableContainer, {\n    style: {\n      height: 500,\n      borderTop: \"2px solid\",\n      borderBottom: \"2px solid\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    style: {\n      background: red[100]\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    style: {\n      minWidth: 390,\n      fontSize: 25\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"\\uC81C\\uD488\\uBA85\"), React.createElement(TableCell, {\n    style: {\n      minWidth: 200\n    },\n    className: classes.tableHeadCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"\\uC218\\uB7C9\"), React.createElement(TableCell, {\n    style: {\n      minWidth: 200\n    },\n    className: classes.tableHeadCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"\\uAE08\\uC561\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, orderList.map(order => {\n    return React.createElement(TableRow, {\n      key: order.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, order.contents.map((content, idx) => {\n      if (idx === order.contents.length - 1) {\n        return content;\n      } else {\n        return content + \", \";\n      }\n    })), React.createElement(TableCell, {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, order.cnt), React.createElement(TableCell, {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, order.price));\n  })))), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(Fastfood, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  })), React.createElement(Button, {\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(Storefront, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  })))), React.createElement(Dialog, {\n    open: openOrderFirst,\n    onClose: handleCloseOrderFirst,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    id: \"alert-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, \"\\uC81C\\uD488\\uC744 \\uC120\\uD0DD\\uD574 \\uC8FC\\uC138\\uC694.\"))));\n};\n\nexport default PaymentModal;","map":{"version":3,"sources":["C:/Users/multicampus/Desktop/project/s02p13c103/web/src/components/original_kiosk/PaymentModal.jsx"],"names":["React","useState","makeStyles","Button","Typography","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","TableContainer","TableHead","TableBody","TableRow","TableCell","Fastfood","Storefront","red","grey","useStyles","theme","btnPayment","color","background","height","width","dialogTitle","backgroundColor","padding","dialogBody","titleCss","position","left","spacing","margin","fontSize","tableHeadCell","textAlign","PaymentModal","orderList","classes","open","setOpen","handleClickOpen","handleClose","openOrderFirst","setOpenOrderFirst","handleClickOpenOrderFirst","handleCloseOrderFirst","handleClick","length","console","log","borderTop","borderBottom","minWidth","map","order","id","contents","content","idx","cnt","price"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Button,\r\n  Typography,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  TableContainer,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell\r\n} from \"@material-ui/core\";\r\nimport { Fastfood, Storefront } from \"@material-ui/icons\";\r\nimport { red, grey } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  btnPayment: {\r\n    color: \"white\",\r\n    background: \"red\",\r\n    height: 100,\r\n    width: \"100%\"\r\n  },\r\n  dialogTitle: {\r\n    backgroundColor: \"red\",\r\n    width: \"840px\",\r\n    height: 69,\r\n    color: \"white\",\r\n    padding: 0\r\n  },\r\n  dialogBody: {\r\n    width: \"840px\"\r\n  },\r\n  titleCss: {\r\n    position: \"absolute\",\r\n    left: theme.spacing(2),\r\n    margin: 0,\r\n    fontSize: 35,\r\n    padding: 5\r\n  },\r\n  tableHeadCell: {\r\n    textAlign: \"center\",\r\n    fontSize: 25\r\n  }\r\n}));\r\n\r\nconst PaymentModal = ({ orderList }) => {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [openOrderFirst, setOpenOrderFirst] = useState(false);\r\n  const handleClickOpenOrderFirst = () => {\r\n    setOpenOrderFirst(true);\r\n  };\r\n  const handleCloseOrderFirst = () => {\r\n    setOpenOrderFirst(false);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    if (orderList.length === 0) {\r\n      handleClickOpenOrderFirst();\r\n    } else {\r\n      handleClickOpen();\r\n    }\r\n    console.log(orderList);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button className={classes.btnPayment} onClick={handleClick}>\r\n        결제하기\r\n      </Button>\r\n      {/* 주문 확인 및 식사 장소 선택 모달*/}\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        maxWidth=\"xl\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\" className={classes.dialogTitle}>\r\n          <p className={classes.titleCss}>결제하기</p>\r\n        </DialogTitle>\r\n        <DialogContent\r\n        // className={classes.dialogBody}\r\n        >\r\n          <DialogContentText\r\n            id=\"alert-dialog-description\"\r\n            style={{ textAlign: \"center\" }}\r\n          >\r\n            <Typography variant=\"h5\" style={{ color: \"black\", margin: 20 }}>\r\n              주문내역을 확인 후 식사 장소를 선택하세요.\r\n            </Typography>\r\n          </DialogContentText>\r\n          <TableContainer\r\n            style={{\r\n              height: 500,\r\n              borderTop: \"2px solid\",\r\n              borderBottom: \"2px solid\"\r\n            }}\r\n          >\r\n            <TableHead>\r\n              <TableRow style={{ background: red[100] }}>\r\n                <TableCell style={{ minWidth: 390, fontSize: 25 }}>\r\n                  제품명\r\n                </TableCell>\r\n                <TableCell\r\n                  style={{ minWidth: 200 }}\r\n                  className={classes.tableHeadCell}\r\n                >\r\n                  수량\r\n                </TableCell>\r\n                <TableCell\r\n                  style={{ minWidth: 200 }}\r\n                  className={classes.tableHeadCell}\r\n                >\r\n                  금액\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {orderList.map(order => {\r\n                return (\r\n                  <TableRow key={order.id}>\r\n                    {/* 제품목록 보여주는 cell */}\r\n                    <TableCell>\r\n                      {order.contents.map((content, idx) => {\r\n                        if (idx === order.contents.length - 1) {\r\n                          return content;\r\n                        } else {\r\n                          return content + \", \";\r\n                        }\r\n                      })}\r\n                    </TableCell>\r\n                    {/* 제품수량 보여주는 cell */}\r\n                    <TableCell style={{ textAlign: \"center\" }}>\r\n                      {/* <IndeterminateCheckBox\r\n                      style={{ color: \"red\" }}\r\n                      onClick={() => decCnt(order.id)}\r\n                    /> */}\r\n                      {order.cnt}\r\n                      {/* <AddBox\r\n                      style={{ color: \"red\" }}\r\n                      onClick={() => incCnt(order.id)}\r\n                    /> */}\r\n                    </TableCell>\r\n                    {/* 제품가격 보여주는 cell */}\r\n                    <TableCell style={{ textAlign: \"center\" }}>\r\n                      {order.price}\r\n                      {/* <Close\r\n                      style={{ color: \"red\" }}\r\n                      // onClick={() => deleteList(order.id)}\r\n                    /> */}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </TableContainer>\r\n        </DialogContent>\r\n        <DialogContent>\r\n          <Button onClick={handleClose}>\r\n            <Fastfood />\r\n          </Button>\r\n          <Button onClick={handleClose}>\r\n            <Storefront />\r\n          </Button>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      {/* 주문내역이 없을 떄 보여주는 모달 */}\r\n      <Dialog\r\n        open={openOrderFirst}\r\n        onClose={handleCloseOrderFirst}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            제품을 선택해 주세요.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentModal;\r\n"]},"metadata":{},"sourceType":"module"}