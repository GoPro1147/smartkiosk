{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\multicampus\\\\git\\\\s02p13c103\\\\web\\\\src\\\\pages\\\\auth\\\\auth-go.jsx\";\nimport React from \"react\";\nimport Layout from \"../../layout/Layout\";\nimport Webcam from \"react-webcam\";\n\nvar AWS = require(\"aws-sdk\");\n\nconst videoConstraints = {\n  width: 1280,\n  height: 720,\n  facingMode: \"user\"\n};\nconst cfg = {\n  region: \"us-west-2\",\n  upload_bucket_name: \"rekognition-stack-demo-s3upload-1gezpp4hs4cul\",\n  identity_pool_id: \"us-west-2:811ae595-f007-467f-919f-0056e4a81b3b\",\n  face_collection: \"rekognition-demo-go\",\n  ddb_table: \"rekognition-demo-go\"\n};\nvar bucketName = cfg.upload_bucket_name;\nvar face_collection = cfg.face_collection;\nvar table = cfg.ddb_table; // Define AWS Resources\n\nvar region = cfg.region;\nvar creds = new AWS.CognitoIdentityCredentials({\n  IdentityPoolId: cfg.identity_pool_id\n});\nAWS.config.update({\n  region: region,\n  credentials: creds\n});\nvar rekognition = new AWS.Rekognition({\n  apiVersion: \"2016-06-27\"\n});\nvar docClient = new AWS.DynamoDB.DocumentClient();\nvar identityId = AWS.config.credentials.identityId;\nvar s3 = new AWS.S3({\n  apiVersion: \"2006-03-01\",\n  params: {\n    Bucket: bucketName\n  }\n});\n\nconst AuthPage = props => {\n  const index = 0;\n  var imageSrc;\n  const webcamRef = React.useRef(null);\n  const capture = React.useCallback(() => {\n    imageSrc = getBinary(webcamRef.current.getScreenshot());\n    console.log(imageSrc);\n    trackEmotions();\n  }, [webcamRef]);\n\n  function getBinary(encodedFile) {\n    var base64Image = encodedFile.split(\"data:image/jpeg;base64,\")[1];\n    var binaryImg = atob(base64Image);\n    var length = binaryImg.length;\n    var ab = new ArrayBuffer(length);\n    var ua = new Uint8Array(ab);\n\n    for (var i = 0; i < length; i++) {\n      ua[i] = binaryImg.charCodeAt(i);\n    }\n\n    var blob = new Blob([ab], {\n      type: \"image/jpeg\"\n    });\n    return ab;\n  }\n\n  const trackEmotions = () => {\n    console.log(\"감정 분석 들어갑니다.\");\n    var params = {\n      Attributes: [\"ALL\"],\n      Image: {\n        Bytes: imageSrc\n      }\n    };\n    rekognition.detectFaces(params, function (err, data) {\n      if (err) {\n        console.log(\"얼굴 인식 ERROR\");\n        console.log(err);\n      } else {\n        console.log(data);\n        console.log(data.FaceDetails[0].Smile);\n        var smile = data.FaceDetails[0].Smile;\n        console.log(smile.Value);\n\n        if (smile.Value == \"true\") {\n          console.log(\"너는 웃고 있다..\");\n        }\n      }\n    });\n  };\n\n  return React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Webcam, {\n    audio: false,\n    height: 720,\n    ref: webcamRef,\n    screenshotFormat: \"image/jpeg\",\n    width: 1280,\n    videoConstraints: videoConstraints,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: capture,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Capture photo\"));\n};\n\nexport default AuthPage;","map":{"version":3,"sources":["C:/Users/multicampus/git/s02p13c103/web/src/pages/auth/auth-go.jsx"],"names":["React","Layout","Webcam","AWS","require","videoConstraints","width","height","facingMode","cfg","region","upload_bucket_name","identity_pool_id","face_collection","ddb_table","bucketName","table","creds","CognitoIdentityCredentials","IdentityPoolId","config","update","credentials","rekognition","Rekognition","apiVersion","docClient","DynamoDB","DocumentClient","identityId","s3","S3","params","Bucket","AuthPage","props","index","imageSrc","webcamRef","useRef","capture","useCallback","getBinary","current","getScreenshot","console","log","trackEmotions","encodedFile","base64Image","split","binaryImg","atob","length","ab","ArrayBuffer","ua","Uint8Array","i","charCodeAt","blob","Blob","type","Attributes","Image","Bytes","detectFaces","err","data","FaceDetails","Smile","smile","Value"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Layout from \"../../layout/Layout\";\r\nimport Webcam from \"react-webcam\";\r\nvar AWS = require(\"aws-sdk\");\r\nconst videoConstraints = {\r\n  width: 1280,\r\n  height: 720,\r\n  facingMode: \"user\"\r\n};\r\nconst cfg = {\r\n  region: \"us-west-2\",\r\n  upload_bucket_name: \"rekognition-stack-demo-s3upload-1gezpp4hs4cul\",\r\n  identity_pool_id: \"us-west-2:811ae595-f007-467f-919f-0056e4a81b3b\",\r\n  face_collection: \"rekognition-demo-go\",\r\n  ddb_table: \"rekognition-demo-go\"\r\n};\r\nvar bucketName = cfg.upload_bucket_name;\r\nvar face_collection = cfg.face_collection;\r\nvar table = cfg.ddb_table;\r\n// Define AWS Resources\r\nvar region = cfg.region;\r\nvar creds = new AWS.CognitoIdentityCredentials({\r\n  IdentityPoolId: cfg.identity_pool_id\r\n});\r\n\r\nAWS.config.update({\r\n  region: region,\r\n  credentials: creds\r\n});\r\n\r\nvar rekognition = new AWS.Rekognition({ apiVersion: \"2016-06-27\" });\r\nvar docClient = new AWS.DynamoDB.DocumentClient();\r\n\r\nvar identityId = AWS.config.credentials.identityId;\r\n\r\nvar s3 = new AWS.S3({\r\n  apiVersion: \"2006-03-01\",\r\n  params: { Bucket: bucketName }\r\n});\r\nconst AuthPage = props => {\r\n  const index = 0;\r\n  var imageSrc;\r\n  const webcamRef = React.useRef(null);\r\n  const capture = React.useCallback(() => {\r\n    imageSrc = getBinary(webcamRef.current.getScreenshot());\r\n    console.log(imageSrc);\r\n    trackEmotions();\r\n  }, [webcamRef]);\r\n  function getBinary(encodedFile) {\r\n    var base64Image = encodedFile.split(\"data:image/jpeg;base64,\")[1];\r\n    var binaryImg = atob(base64Image);\r\n    var length = binaryImg.length;\r\n    var ab = new ArrayBuffer(length);\r\n    var ua = new Uint8Array(ab);\r\n    for (var i = 0; i < length; i++) {\r\n      ua[i] = binaryImg.charCodeAt(i);\r\n    }\r\n\r\n    var blob = new Blob([ab], {\r\n      type: \"image/jpeg\"\r\n    });\r\n\r\n    return ab;\r\n  }\r\n  const trackEmotions = () => {\r\n    console.log(\"감정 분석 들어갑니다.\");\r\n    var params = {\r\n      Attributes: [\"ALL\"],\r\n      Image: {\r\n        Bytes: imageSrc\r\n      }\r\n    };\r\n    rekognition.detectFaces(params, function(err, data) {\r\n      if (err) {\r\n        console.log(\"얼굴 인식 ERROR\");\r\n        console.log(err);\r\n      } else {\r\n        console.log(data);\r\n        console.log(data.FaceDetails[0].Smile);\r\n        var smile = data.FaceDetails[0].Smile;\r\n\r\n        console.log(smile.Value);\r\n        if (smile.Value == \"true\") {\r\n          console.log(\"너는 웃고 있다..\");\r\n        }\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <Layout>\r\n      <Webcam\r\n        audio={false}\r\n        height={720}\r\n        ref={webcamRef}\r\n        screenshotFormat=\"image/jpeg\"\r\n        width={1280}\r\n        videoConstraints={videoConstraints}\r\n      />\r\n      <button onClick={capture}>Capture photo</button>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default AuthPage;\r\n"]},"metadata":{},"sourceType":"module"}