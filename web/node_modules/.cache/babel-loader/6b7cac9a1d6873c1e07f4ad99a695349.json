{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\multicampus\\\\git\\\\s02p13c103\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\multicampus\\\\git\\\\s02p13c103\\\\web\\\\src\\\\layout\\\\BodyOrder.jsx\";\nimport React, { useState, Fragment, useEffect, useMemo } from \"react\";\nimport BodyOrderChoiceList from \"./BodyOrderChoiceList\";\nimport BurgerListt from \"../components/original_kiosk/BurgerList\";\nimport SideList from \"../components/original_kiosk/SideList\";\nimport BeverageList from \"../components/original_kiosk/BeverageList\";\nimport { makeStyles, AppBar, Toolbar, Grid, Paper } from \"@material-ui/core\";\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    marginTop: \"120px\",\n    height: \"120px\"\n  },\n  menuButton: {\n    marginLeft: theme.spacing(2),\n    height: \"80px\",\n    width: \"80px\"\n  },\n  paper: {\n    textAlign: \"center\",\n    fontSize: \"50px\"\n  },\n  menuContext: {\n    marginTop: \"240px\",\n    height: \"1060px\"\n  }\n}));\n\nconst BodyOrder = () => {\n  const classes = useStyles();\n\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        list = _useState2[0],\n        setList = _useState2[1];\n\n  const menus = [{\n    id: 0,\n    text: \"버거\"\n  }, {\n    id: 1,\n    text: \"사이드\"\n  }, {\n    id: 2,\n    text: \"음료\"\n  }];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        order = _useState4[0],\n        setOrder = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        orderList = _useState6[0],\n        setOrderList = _useState6[1];\n\n  const _useState7 = useState(0),\n        _useState8 = _slicedToArray(_useState7, 2),\n        nextId = _useState8[0],\n        setNextId = _useState8[1]; // 오더 리스트를 추가하는 부분\n\n\n  useEffect(() => {\n    if (order.contents) {\n      // =======================================================\n      let check = true;\n      let checkIdx = 0;\n      let editOrder = {};\n      console.log(\"before: \", check);\n      orderList.map((ord, idx) => {\n        if (ord.contents.length === order.contents.length) {\n          let cntCheck = 0;\n          ord.contents.map((content, contentIdx) => {\n            if (content === order.contents[contentIdx]) {\n              cntCheck += 1;\n            }\n          });\n\n          if (order.contents.length === cntCheck) {\n            check = false;\n            checkIdx = idx;\n            editOrder = {\n              id: ord.id,\n              contents: ord.contents,\n              cnt: ord.cnt + order.cnt,\n              price: ord.price + order.price\n            };\n          }\n        }\n      });\n      console.log(\"after: \", check);\n\n      if (check) {\n        const newOrderList = orderList.concat({\n          id: \"list\" + nextId,\n          contents: order.contents,\n          cnt: order.cnt,\n          price: order.price\n        });\n        setOrderList(newOrderList);\n        setNextId(nextId + 1);\n      } else {\n        const newOrderList = [];\n        orderList.map((ord, idx) => {\n          if (idx === checkIdx) {\n            newOrderList.push(editOrder);\n          } else {\n            newOrderList.push({\n              id: ord.id,\n              contents: ord.contents,\n              cnt: ord.cnt,\n              price: ord.price\n            });\n          }\n        });\n        setOrderList(newOrderList);\n      } // =======================================================\n\n    }\n  }, [order]);\n\n  const BodyControl = () => {\n    switch (list) {\n      case 0:\n        return React.createElement(BurgerListt, {\n          setOrder: setOrder,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        });\n\n      case 1:\n        return React.createElement(SideList, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        });\n\n      case 2:\n        return React.createElement(BeverageList, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        });\n\n      default:\n        return React.createElement(BurgerListt, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        });\n    }\n  };\n\n  const menuList = menus.map(menu => {\n    return React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      key: menu.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      onClick: () => {\n        setList(menu.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, menu.text));\n  });\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    position: \"fixed\",\n    className: classes.appBar,\n    style: {\n      backgroundColor: \"yellow\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    style: {\n      height: \"120px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, menuList))), React.createElement(\"div\", {\n    className: classes.menuContext,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(BodyControl, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  })), React.createElement(BodyOrderChoiceList // order={order}\n  , {\n    orderList: orderList,\n    setOrderList: setOrderList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }));\n};\n\nexport default BodyOrder;","map":{"version":3,"sources":["C:/Users/multicampus/git/s02p13c103/web/src/layout/BodyOrder.jsx"],"names":["React","useState","Fragment","useEffect","useMemo","BodyOrderChoiceList","BurgerListt","SideList","BeverageList","makeStyles","AppBar","Toolbar","Grid","Paper","useStyles","theme","appBar","marginTop","height","menuButton","marginLeft","spacing","width","paper","textAlign","fontSize","menuContext","BodyOrder","classes","list","setList","menus","id","text","order","setOrder","orderList","setOrderList","nextId","setNextId","contents","check","checkIdx","editOrder","console","log","map","ord","idx","length","cntCheck","content","contentIdx","cnt","price","newOrderList","concat","push","BodyControl","menuList","menu","backgroundColor"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,EAA+CC,OAA/C,QAA8D,OAA9D;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,WAAP,MAAwB,yCAAxB;AACA,OAAOC,QAAP,MAAqB,uCAArB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,OAA7B,EAAsCC,IAAtC,EAA4CC,KAA5C,QAAyD,mBAAzD;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAACM,KAAK,KAAK;AACrCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,SAAS,EAAE,OADL;AAENC,IAAAA,MAAM,EAAE;AAFF,GAD6B;AAKrCC,EAAAA,UAAU,EAAE;AACVC,IAAAA,UAAU,EAAEL,KAAK,CAACM,OAAN,CAAc,CAAd,CADF;AAEVH,IAAAA,MAAM,EAAE,MAFE;AAGVI,IAAAA,KAAK,EAAE;AAHG,GALyB;AAUrCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAE,QADN;AAELC,IAAAA,QAAQ,EAAE;AAFL,GAV8B;AAcrCC,EAAAA,WAAW,EAAE;AACXT,IAAAA,SAAS,EAAE,OADA;AAEXC,IAAAA,MAAM,EAAE;AAFG;AAdwB,CAAL,CAAN,CAA5B;;AAoBA,MAAMS,SAAS,GAAG,MAAM;AACtB,QAAMC,OAAO,GAAGd,SAAS,EAAzB;;AADsB,oBAEEb,QAAQ,CAAC,CAAD,CAFV;AAAA;AAAA,QAEf4B,IAFe;AAAA,QAETC,OAFS;;AAGtB,QAAMC,KAAK,GAAG,CACZ;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GADY,EAEZ;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GAFY,EAGZ;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GAHY,CAAd;;AAHsB,qBASIhC,QAAQ,CAAC,EAAD,CATZ;AAAA;AAAA,QASfiC,KATe;AAAA,QASRC,QATQ;;AAAA,qBAUYlC,QAAQ,CAAC,EAAD,CAVpB;AAAA;AAAA,QAUfmC,SAVe;AAAA,QAUJC,YAVI;;AAAA,qBAWMpC,QAAQ,CAAC,CAAD,CAXd;AAAA;AAAA,QAWfqC,MAXe;AAAA,QAWPC,SAXO,kBAatB;;;AACApC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI+B,KAAK,CAACM,QAAV,EAAoB;AAClB;AACA,UAAIC,KAAK,GAAG,IAAZ;AACA,UAAIC,QAAQ,GAAG,CAAf;AACA,UAAIC,SAAS,GAAG,EAAhB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBJ,KAAxB;AACAL,MAAAA,SAAS,CAACU,GAAV,CAAc,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC1B,YAAID,GAAG,CAACP,QAAJ,CAAaS,MAAb,KAAwBf,KAAK,CAACM,QAAN,CAAeS,MAA3C,EAAmD;AACjD,cAAIC,QAAQ,GAAG,CAAf;AACAH,UAAAA,GAAG,CAACP,QAAJ,CAAaM,GAAb,CAAiB,CAACK,OAAD,EAAUC,UAAV,KAAyB;AACxC,gBAAID,OAAO,KAAKjB,KAAK,CAACM,QAAN,CAAeY,UAAf,CAAhB,EAA4C;AAC1CF,cAAAA,QAAQ,IAAI,CAAZ;AACD;AACF,WAJD;;AAKA,cAAIhB,KAAK,CAACM,QAAN,CAAeS,MAAf,KAA0BC,QAA9B,EAAwC;AACtCT,YAAAA,KAAK,GAAG,KAAR;AACAC,YAAAA,QAAQ,GAAGM,GAAX;AACAL,YAAAA,SAAS,GAAG;AACVX,cAAAA,EAAE,EAAEe,GAAG,CAACf,EADE;AAEVQ,cAAAA,QAAQ,EAAEO,GAAG,CAACP,QAFJ;AAGVa,cAAAA,GAAG,EAAEN,GAAG,CAACM,GAAJ,GAAUnB,KAAK,CAACmB,GAHX;AAIVC,cAAAA,KAAK,EAAEP,GAAG,CAACO,KAAJ,GAAYpB,KAAK,CAACoB;AAJf,aAAZ;AAMD;AACF;AACF,OAnBD;AAoBAV,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBJ,KAAvB;;AACA,UAAIA,KAAJ,EAAW;AACT,cAAMc,YAAY,GAAGnB,SAAS,CAACoB,MAAV,CAAiB;AACpCxB,UAAAA,EAAE,EAAE,SAASM,MADuB;AAEpCE,UAAAA,QAAQ,EAAEN,KAAK,CAACM,QAFoB;AAGpCa,UAAAA,GAAG,EAAEnB,KAAK,CAACmB,GAHyB;AAIpCC,UAAAA,KAAK,EAAEpB,KAAK,CAACoB;AAJuB,SAAjB,CAArB;AAMAjB,QAAAA,YAAY,CAACkB,YAAD,CAAZ;AACAhB,QAAAA,SAAS,CAACD,MAAM,GAAG,CAAV,CAAT;AACD,OATD,MASO;AACL,cAAMiB,YAAY,GAAG,EAArB;AACAnB,QAAAA,SAAS,CAACU,GAAV,CAAc,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC1B,cAAIA,GAAG,KAAKN,QAAZ,EAAsB;AACpBa,YAAAA,YAAY,CAACE,IAAb,CAAkBd,SAAlB;AACD,WAFD,MAEO;AACLY,YAAAA,YAAY,CAACE,IAAb,CAAkB;AAChBzB,cAAAA,EAAE,EAAEe,GAAG,CAACf,EADQ;AAEhBQ,cAAAA,QAAQ,EAAEO,GAAG,CAACP,QAFE;AAGhBa,cAAAA,GAAG,EAAEN,GAAG,CAACM,GAHO;AAIhBC,cAAAA,KAAK,EAAEP,GAAG,CAACO;AAJK,aAAlB;AAMD;AACF,SAXD;AAYAjB,QAAAA,YAAY,CAACkB,YAAD,CAAZ;AACD,OAnDiB,CAoDlB;;AACD;AACF,GAvDQ,EAuDN,CAACrB,KAAD,CAvDM,CAAT;;AAyDA,QAAMwB,WAAW,GAAG,MAAM;AACxB,YAAQ7B,IAAR;AACE,WAAK,CAAL;AACE,eAAO,oBAAC,WAAD;AAAa,UAAA,QAAQ,EAAEM,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACF,WAAK,CAAL;AACE,eAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACF,WAAK,CAAL;AACE,eAAO,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACF;AACE,eAAO,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AARJ;AAUD,GAXD;;AAaA,QAAMwB,QAAQ,GAAG5B,KAAK,CAACe,GAAN,CAAUc,IAAI,IAAI;AACjC,WACE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,GAAG,EAAEA,IAAI,CAAC5B,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,SAAS,EAAEJ,OAAO,CAACL,KADrB;AAEE,MAAA,OAAO,EAAE,MAAM;AACbO,QAAAA,OAAO,CAAC8B,IAAI,CAAC5B,EAAN,CAAP;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMG4B,IAAI,CAAC3B,IANR,CADF,CADF;AAYD,GAbgB,CAAjB;AAeA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,OAAjB;AAAyB,IAAA,SAAS,EAAEL,OAAO,CAACZ,MAA5C;AAAoD,IAAA,KAAK,EAAE;AAAE6C,MAAAA,eAAe,EAAE;AAAnB,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAE;AAAE3C,MAAAA,MAAM,EAAE;AAAV,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAA4B,IAAA,OAAO,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGyC,QADH,CADF,CADF,CADF,EAQE;AAAK,IAAA,SAAS,EAAE/B,OAAO,CAACF,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARF,EAYE,oBAAC,mBAAD,CACE;AADF;AAEE,IAAA,SAAS,EAAEU,SAFb;AAGE,IAAA,YAAY,EAAEC,YAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF;AAoBD,CAvHD;;AAyHA,eAAeV,SAAf","sourcesContent":["import React, { useState, Fragment, useEffect, useMemo } from \"react\";\r\nimport BodyOrderChoiceList from \"./BodyOrderChoiceList\";\r\nimport BurgerListt from \"../components/original_kiosk/BurgerList\";\r\nimport SideList from \"../components/original_kiosk/SideList\";\r\nimport BeverageList from \"../components/original_kiosk/BeverageList\";\r\nimport { makeStyles, AppBar, Toolbar, Grid, Paper } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appBar: {\r\n    marginTop: \"120px\",\r\n    height: \"120px\"\r\n  },\r\n  menuButton: {\r\n    marginLeft: theme.spacing(2),\r\n    height: \"80px\",\r\n    width: \"80px\"\r\n  },\r\n  paper: {\r\n    textAlign: \"center\",\r\n    fontSize: \"50px\"\r\n  },\r\n  menuContext: {\r\n    marginTop: \"240px\",\r\n    height: \"1060px\"\r\n  }\r\n}));\r\n\r\nconst BodyOrder = () => {\r\n  const classes = useStyles();\r\n  const [list, setList] = useState(0);\r\n  const menus = [\r\n    { id: 0, text: \"버거\" },\r\n    { id: 1, text: \"사이드\" },\r\n    { id: 2, text: \"음료\" }\r\n  ];\r\n\r\n  const [order, setOrder] = useState({});\r\n  const [orderList, setOrderList] = useState([]);\r\n  const [nextId, setNextId] = useState(0);\r\n\r\n  // 오더 리스트를 추가하는 부분\r\n  useEffect(() => {\r\n    if (order.contents) {\r\n      // =======================================================\r\n      let check = true;\r\n      let checkIdx = 0;\r\n      let editOrder = {};\r\n      console.log(\"before: \", check);\r\n      orderList.map((ord, idx) => {\r\n        if (ord.contents.length === order.contents.length) {\r\n          let cntCheck = 0;\r\n          ord.contents.map((content, contentIdx) => {\r\n            if (content === order.contents[contentIdx]) {\r\n              cntCheck += 1;\r\n            }\r\n          });\r\n          if (order.contents.length === cntCheck) {\r\n            check = false;\r\n            checkIdx = idx;\r\n            editOrder = {\r\n              id: ord.id,\r\n              contents: ord.contents,\r\n              cnt: ord.cnt + order.cnt,\r\n              price: ord.price + order.price\r\n            };\r\n          }\r\n        }\r\n      });\r\n      console.log(\"after: \", check);\r\n      if (check) {\r\n        const newOrderList = orderList.concat({\r\n          id: \"list\" + nextId,\r\n          contents: order.contents,\r\n          cnt: order.cnt,\r\n          price: order.price\r\n        });\r\n        setOrderList(newOrderList);\r\n        setNextId(nextId + 1);\r\n      } else {\r\n        const newOrderList = [];\r\n        orderList.map((ord, idx) => {\r\n          if (idx === checkIdx) {\r\n            newOrderList.push(editOrder);\r\n          } else {\r\n            newOrderList.push({\r\n              id: ord.id,\r\n              contents: ord.contents,\r\n              cnt: ord.cnt,\r\n              price: ord.price\r\n            });\r\n          }\r\n        });\r\n        setOrderList(newOrderList);\r\n      }\r\n      // =======================================================\r\n    }\r\n  }, [order]);\r\n\r\n  const BodyControl = () => {\r\n    switch (list) {\r\n      case 0:\r\n        return <BurgerListt setOrder={setOrder} />;\r\n      case 1:\r\n        return <SideList />;\r\n      case 2:\r\n        return <BeverageList />;\r\n      default:\r\n        return <BurgerListt />;\r\n    }\r\n  };\r\n\r\n  const menuList = menus.map(menu => {\r\n    return (\r\n      <Grid item xs={2} key={menu.id}>\r\n        <Paper\r\n          className={classes.paper}\r\n          onClick={() => {\r\n            setList(menu.id);\r\n          }}\r\n        >\r\n          {menu.text}\r\n        </Paper>\r\n      </Grid>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      <AppBar position=\"fixed\" className={classes.appBar} style={{ backgroundColor: \"yellow\" }}>\r\n        <Toolbar style={{ height: \"120px\" }}>\r\n          <Grid container spacing={4} justify=\"center\">\r\n            {menuList}\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div className={classes.menuContext}>\r\n        <BodyControl></BodyControl>\r\n      </div>\r\n      {/* 주문확인 및 결제 컴포넌트=================================================== */}\r\n      <BodyOrderChoiceList\r\n        // order={order}\r\n        orderList={orderList}\r\n        setOrderList={setOrderList}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default BodyOrder;\r\n"]},"metadata":{},"sourceType":"module"}